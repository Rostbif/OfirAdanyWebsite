name: Deploy Backend to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "16"

      - name: Install dependencies
        run: npm install
        working-directory: backend

      - name: Build project
        run: npm run build
        working-directory: backend

      - name: Deploy to EC2
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
          MONGODB_CONNECTION_STRING: ${{ secrets.MONGODB_CONNECTION_STRING }}
          FRONTEND_URL: ${{ secrets.FRONTEND_URL }}
          JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
          EC2_USER: ec2-user
          EC2_HOST: 3.13.197.119
        run: |
          echo "$SSH_PRIVATE_KEY" > private_key
          chmod 600 private_key
          # Create the .ssh directory
          mkdir -p ~/.ssh
          # Disable strict host key checking for SSH and SCP
          echo -e "Host *\n\tStrictHostKeyChecking no\n" > ~/.ssh/config
          # Clean old files from the EC2 instance and create the backend directory
          ssh -i private_key -o StrictHostKeyChecking=no ec2-user@3.13.197.119 << 'EOF'
            rm -rf /home/ec2-user/backend/dist
            rm -rf /home/ec2-user/backend/node_modules
            mkdir -p /home/ec2-user/backend
            pm2 delete backend || true
          EOF
          # Copy the built project to the EC2 instance
          scp -i private_key -o StrictHostKeyChecking=no -r backend/dist ec2-user@3.13.197.119:/home/ec2-user/backend/dist
          scp -i private_key -o StrictHostKeyChecking=no backend/package.json ec2-user@3.13.197.119:/home/ec2-user/backend/package.json
          scp -i private_key -o StrictHostKeyChecking=no backend/package-lock.json ec2-user@3.13.197.119:/home/ec2-user/backend/package-lock.json
          ssh -i private_key -o StrictHostKeyChecking=no ec2-user@3.13.197.119 << 'EOF'
            echo "MONGODB_CONNECTION_STRING=${{ secrets.MONGODB_CONNECTION_STRING }}" > /home/ec2-user/backend/.env
            echo "FRONTEND_URL=${{ secrets.FRONTEND_URL }}" >> /home/ec2-user/backend/.env
            echo "JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}" >> /home/ec2-user/backend/.env
            cd /home/ec2-user/backend
            npm install --production
            pm2 start dist/index.js --name backend
          EOF
          rm private_key
